

      deepdive.schema.variables {
        smoke.label: Boolean
cancer.label: Boolean
      }
    

      deepdive.extraction.extractors.ext_cancer {
        cmd: """

	# TODO use temporary table
	deepdive create table "cancer"
	deepdive sql 'INSERT INTO cancer SELECT DISTINCT R0.person_id, 0 AS id, R0.has_cancer AS label
          FROM person_has_cancer R0
        
          '
	# TODO rename temporary table to replace output_relation
	
        """
          output_relation: "cancer"
        style: "cmd_extractor"
          
          input_relations: [
            person_has_cancer
          ]
      }
    

      deepdive.extraction.extractors.ext_smoke {
        cmd: """

	# TODO use temporary table
	deepdive create table "smoke"
	deepdive sql 'INSERT INTO smoke SELECT DISTINCT R0.person_id, 0 AS id, R0.smokes AS label
          FROM person_smokes R0
        
          '
	# TODO rename temporary table to replace output_relation
	
        """
          output_relation: "smoke"
        style: "cmd_extractor"
          
          input_relations: [
            person_smokes
          ]
      }
    

        deepdive.inference.factors.inf_imply_smoke_cancer {
          input_query: """
          SELECT R0.id AS "smoke.R0.id" , R1.id AS "cancer.R1.id" 
          FROM smoke R0, cancer R1, person_smokes R2
        WHERE R1.person_id = R0.person_id  AND R2.person_id = R0.person_id """
          function: "Imply(smoke.R0.label, cancer.R1.label)"
          weight: "0.5"
          
          input_relations: [
            smoke
            cancer
            person_smokes
          ]
        }
      

        deepdive.inference.factors.inf_imply_smoke_smoke {
          input_query: """
          SELECT R0.id AS "smoke.R0.id" , R1.id AS "smoke.R1.id" 
          FROM smoke R0, smoke R1, friends R2
        WHERE R2.person_id = R0.person_id  AND R2.friend_id = R1.person_id """
          function: "Imply(smoke.R0.label, smoke.R1.label)"
          weight: "0.4"
          
          input_relations: [
            smoke
            friends
          ]
        }
      
deepdive.pipeline.run: ${PIPELINE}
deepdive.pipeline.pipelines.extraction: [
  ext_cancer
  ext_smoke
]
deepdive.pipeline.pipelines.inference: [
  inf_imply_smoke_cancer
  inf_imply_smoke_smoke
]
deepdive.pipeline.pipelines.endtoend: [
  ext_cancer
  ext_smoke
  inf_imply_smoke_cancer
  inf_imply_smoke_smoke
]
deepdive.pipeline.base_dir: ${BASEDIR}

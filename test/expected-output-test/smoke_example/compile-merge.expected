

      deepdive.schema.variables {
        
      }
    

      deepdive.extraction.extractors.ext_person_smokes {
        cmd: """

	# TODO use temporary table
	deepdive create table "person_smokes"
	deepdive sql 'INSERT INTO person_smokes SELECT R0.person_id, R0.smokes
FROM dd_new_person_smokes R0
        '
	# TODO rename temporary table to replace output_relation
	
        """
          output_relation: "person_smokes"
        style: "cmd_extractor"
          
          input_relations: [
            dd_new_person_smokes
          ]
      }
    

      deepdive.extraction.extractors.ext_friends {
        cmd: """

	# TODO use temporary table
	deepdive create table "friends"
	deepdive sql 'INSERT INTO friends SELECT R0.person_id, R0.friend_id
FROM dd_new_friends R0
        '
	# TODO rename temporary table to replace output_relation
	
        """
          output_relation: "friends"
        style: "cmd_extractor"
          
          input_relations: [
            dd_new_friends
          ]
      }
    

      deepdive.extraction.extractors.ext_person_has_cancer {
        cmd: """

	# TODO use temporary table
	deepdive create table "person_has_cancer"
	deepdive sql 'INSERT INTO person_has_cancer SELECT R0.person_id, R0.has_cancer
FROM dd_new_person_has_cancer R0
        '
	# TODO rename temporary table to replace output_relation
	
        """
          output_relation: "person_has_cancer"
        style: "cmd_extractor"
          
          input_relations: [
            dd_new_person_has_cancer
          ]
      }
    

      deepdive.extraction.extractors.ext_person {
        cmd: """

	# TODO use temporary table
	deepdive create table "person"
	deepdive sql 'INSERT INTO person SELECT R0.person_id, R0.name
FROM dd_new_person R0
        '
	# TODO rename temporary table to replace output_relation
	
        """
          output_relation: "person"
        style: "cmd_extractor"
          
          input_relations: [
            dd_new_person
          ]
      }
    
deepdive.pipeline.run: ${PIPELINE}
deepdive.pipeline.pipelines.extraction: [
  ext_person_smokes
  ext_friends
  ext_person_has_cancer
  ext_person
]
deepdive.pipeline.pipelines.endtoend: [
  ext_person_smokes
  ext_friends
  ext_person_has_cancer
  ext_person
]



      deepdive.schema.variables {
        
      }
    

      deepdive.extraction.extractors.ext_label2 {
        cmd: """

	# TODO use temporary table
	deepdive create table "label2"
	deepdive sql 'INSERT INTO label2 SELECT R0.wid, R0.val
FROM dd_new_label2 R0
        '
	# TODO rename temporary table to replace output_relation
	
        """
          output_relation: "label2"
        style: "cmd_extractor"
          
          input_relations: [
            dd_new_label2
          ]
      }
    

      deepdive.extraction.extractors.ext_label1 {
        cmd: """

	# TODO use temporary table
	deepdive create table "label1"
	deepdive sql 'INSERT INTO label1 SELECT R0.wid, R0.val
FROM dd_new_label1 R0
        '
	# TODO rename temporary table to replace output_relation
	
        """
          output_relation: "label1"
        style: "cmd_extractor"
          
          input_relations: [
            dd_new_label1
          ]
      }
    

      deepdive.extraction.extractors.ext_features {
        cmd: """

	# TODO use temporary table
	deepdive create table "features"
	deepdive sql 'INSERT INTO features SELECT R0.id, R0.word_id, R0.feature_id, R0.feature_val
FROM dd_new_features R0
        '
	# TODO rename temporary table to replace output_relation
	
        """
          output_relation: "features"
        style: "cmd_extractor"
          
          input_relations: [
            dd_new_features
          ]
      }
    
deepdive.pipeline.run: ${PIPELINE}
deepdive.pipeline.pipelines.extraction: [
  ext_label2
  ext_label1
  ext_features
]
deepdive.pipeline.pipelines.endtoend: [
  ext_label2
  ext_label1
  ext_features
]
